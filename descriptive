# Define a function to create boxplots for all columns in a given data frame
# Add parameters to allow the user to specify the data frame, the x-axis variable, the color variable, the theme options, and the option to save the plots
des_boxplots <- function(data, x_var = "origin", color_var = "kultivar", title_prefix = "Boxplot of THC-Content by Cultivar and Origin", theme_options = list(), save_plots = FALSE) {
  # Create an empty list to store the boxplots
  boxplots <- list()

  # Loop over the names of the columns
  for (k in names(data)) {
    # Create a boxplot for the k-th column
    bxp <- ggboxplot(
      data, x = x_var, y = k,
      color = color_var,
      title = paste(title_prefix, k),
      bxp.errorbar = TRUE
    )

    # Customize the theme
    bxp <- bxp + theme(
      plot.title = element_text(hjust = 0.5),
      panel.background = element_rect(fill = "#FFFFFF"),
      panel.border = element_rect(colour = "black", fill = NA, size = 2),
      legend.text = element_text(size = 6)  # Set the legend text size to 8
    ) + scale_y_continuous(minor_breaks = waiver())

    # Apply the user-specified theme options
    for (option in names(theme_options)) {
      bxp <- bxp + theme_options[[option]]
    }

    # Save the boxplot in the list
    boxplots[[k]] <- bxp
  }

  # If the user chooses to save the plots, save them as .jpg files
  if (save_plots) {
    # Create a folder to store the plots
    dir.create("boxplots")
    for (k in names(data)) {
      # Create a file name for the boxplot
      filename <- paste("boxplots/boxplot_spalte", k, ".jpg", sep = "")

      # Save the boxplot as a .jpg file
      ggsave(filename, boxplots[[k]])
    }
  }

  # Return the list of boxplots
  return(boxplots)
}

# Define a function to perform Shapiro-Wilk test on all numerical variables in a given data frame
# Add a parameter to_csv to allow the user to choose whether to save the results or not
# Add a parameter file_name to allow the user to specify the name of the output file
# Set the default value of file_name to "output.csv"
des_shapiro <- function(data, to_csv = FALSE, file_name = "output.csv") {
  numeric_columns <- sapply(data, is.numeric)
  column_numbers <- which(numeric_columns)
  
  # Apply lapply to perform Shapiro-Wilk test only on variables with more than one unique value and a standard deviation > 0
  shapiro_results <- lapply(data[, column_numbers], function(x) {
    x <- na.omit(x)
    if (length(unique(x)) > 1 && sd(x) != 0) shapiro.test(x)
  })
  
  # Remove NULL results (these come from variables with identical values or a standard deviation of zero, e.g. med_esketamin_mg)
  shapiro_results <- shapiro_results[!sapply(shapiro_results, is.null)]
  
  shapiro_results_df <- data.frame(data = character(), W = numeric(), p_value = numeric(), stringsAsFactors = FALSE)
  
  # Loop over the names of the columns
  for (column_number in column_numbers) {
    # Check if the result is not NULL
    if (!is.null(shapiro_results[[column_number]])) {
      result <- shapiro_results[[column_number]]
      shapiro_results_df <- rbind(shapiro_results_df, data.frame(data = names(data)[column_number], W = result$statistic, p_value = result$p.value))
    }
  }
  
  # If the user chooses to save the results, write them to a CSV file with the given file name
  if (to_csv) {
    write.csv(shapiro_results_df, file_name, row.names = FALSE)
  }
  
  return(shapiro_results_df)
}
